{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","webpack:///./node_modules/screenfull/dist/screenfull.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./src/basic-video-player.scss?d226","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/basic-video/src/basic-video.js","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./src/utils.js","webpack:///./src/components/Spacer.js","webpack:///./node_modules/lit-html/directives/repeat.js","webpack:///./src/basic-video-player.js","webpack:///./src/components/Rewind.js","webpack:///./src/components/Forward.js","webpack:///./src/components/Progress.js","webpack:///./src/components/PlayPause.js","webpack:///./src/components/Timestamps.js","webpack:///./src/components/Volume.js","webpack:///./src/components/Settings.js","webpack:///./src/components/Fullscreen.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","strings","raw","slice","freeze","defineProperties","document","window","isCommonjs","keyboardAllowed","Element","fn","val","fnMap","length","ret","eventNameMap","change","fullscreenchange","error","fullscreenerror","screenfull","request","elem","Promise","resolve","requestFullscreen","onFullScreenEntered","this","off","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","on","exit","onFullScreenExit","exitFullscreen","toggle","isFullscreen","onchange","callback","onerror","event","eventName","addEventListener","removeEventListener","Boolean","fullscreenElement","element","enabled","fullscreenEnabled","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","configurable","writable","protoProps","staticProps","content","options","hmr","transform","insertInto","undefined","locals","memo","stylesInDom","isOldIE","all","atob","apply","arguments","getElement","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","id","refs","j","parts","push","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","style","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","join","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","basic_video_BasicVideo","[object Object]","poster","sources","defaultSource","hlsManifestUrl","MediaElement","controls","playsinline","isPlaying","loading","HLSManifestURL","HLSisSupported","HLSInstance","init","then","dispatchEvent","CustomEvent","currentSource","src","source","currentVolume","volume","buffered","isMuted","muted","isLoading","isReady","readyState","totalDuration","duration","currentTime","time","currentProgress","playbackRate","rate","playbackQualities","levels","map","level","label","currentPlaybackQuality","currentLevel","quality","currentPlaybackRate","play","reject","ticks","load","interval","setInterval","clearInterval","loadHlsJs","loaded","Hls","isSupported","attachHls","initialized","forceLoad","catch","console","log","pause","getElementById","script","body","manifest","attachMedia","Events","ERROR","data","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","directives","WeakMap","isDirective","has","isCEPolyfill","customElements","polyfillWrapFlushCallback","reparentNodes","container","start","end","node","removeNodes","startNode","endNode","noChange","nothing","marker","String","Math","random","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","partIndex","nodesToRemove","_prepareTemplate","template","walker","createTreeWalker","lastPartIndex","nextNode","currentNode","nodeType","hasAttributes","attributes","count","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","getAttribute","split","removeAttribute","tagName","lastIndex","createMarker","previousSibling","isTemplatePartActive","createComment","template_instance_TemplateInstance","processor","_parts","values","setValue","commit","fragment","cloneNode","importNode","nodeIndex","_prepareInstance","handleTextExpression","insertAfterNode","handleAttributeExpressions","nodeName","adoptNode","upgrade","template_result_TemplateResult","endIndex","html","match","substr","innerHTML","getHTML","isPrimitive","AttributeCommitter","dirty","_createPart","parts_AttributePart","text","v","Array","isArray","iterator","_getValue","comitter","committer","directive","parts_NodePart","_pendingValue","ref","_insert","_commitText","_commitTemplateResult","Node","_commitNode","_commitIterable","clear","templateFactory","_clone","itemParts","itemPart","appendIntoPart","insertAfterPart","parts_BooleanAttributePart","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","_e","parts_EventPart","eventContext","_boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","_options","getOptions","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","set","getTemplateElement","render_parts","render","assign","appendInto","lit_html_html","utils","getTimeRailMouseEventOffsetPercentage","clientX","touches","changedTouches","positions","x","y","xScroll","scrollLeft","yScroll","scrollTop","offsetLeft","clientLeft","offsetTop","clientTop","offsetParent","getPosition","clientWidth","parseTime","_time","Number","sections","hours","floor","minutes","seconds","parsedTime","section","num","Spacer","Spacer_templateObject","createAndInsertPart","containerPart","beforePart","beforeNode","newPart","updatePart","insertPartBefore","removePart","generateMap","partListCache","keyListCache","repeat","f","args","directive_directive","items","keyFnOrTemplate","keyFn","oldParts","oldKeys","newParts","newValues","newKeys","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","BasicVideoPlayer","_this","classCallCheck_default","bvContainer","classList","add","videoElementId","bvControls","currentMouseX","seeking","settings","renderBasicVideo","trackMousePosition","documentClickEvents","basicVideo","Controls","_this2","basic_video_player_templateObject","BasicVideo","basic_video_player_templateObject2","rewind","_templateObject","Rewind","fastForward","Forward_templateObject","Forward","progressBarWidth","hoverTime","Utils","translatePositionInPixels","mouseUp","offset","mouseDown","mouseMove","preventDefault","Progress_templateObject","Progress","playPause","PlayPause_templateObject","PlayPause","BV","Timestamps_templateObject","Timestamps","changeVolume","muteVolume","rangeHandle","volumeButtonClass","Volume_templateObject","Volume","BVP","settingsDrawerClassList","openSettings","setPlaybackRate","setPlaybackQuality","_templateObject5","stopPropagation","Settings_templateObject","_templateObject2","_templateObject3","_templateObject4","Settings","Screenfull","fullscreen","Fullscreen_templateObject","_this3","_this4","matches","videoContainer","videoContainer2"],"mappings":"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","file":"basic-video-player.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral;","/*!\n* screenfull\n* v4.0.0 - 2018-12-15\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\t\tvar onFullScreenEntered = function () {\n\t\t\t\t\tthis.off('change', onFullScreenEntered);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\telem = elem || document.documentElement;\n\n\t\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t\t// Browser sniffing, since the alternative with\n\t\t\t\t// setTimeout is even worse.\n\t\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\t\telem[request]();\n\t\t\t\t} else {\n\t\t\t\t\telem[request](keyboardAllowed ? Element.ALLOW_KEYBOARD_INPUT : {});\n\t\t\t\t}\n\n\t\t\t\tthis.on('change', onFullScreenEntered);\n\t\t\t}.bind(this));\n\t\t},\n\t\texit: function () {\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tvar onFullScreenExit = function () {\n\t\t\t\t\tthis.off('change', onFullScreenExit);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tdocument[fn.exitFullscreen]();\n\n\t\t\t\tthis.on('change', onFullScreenExit);\n\t\t\t}.bind(this));\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\treturn this.isFullscreen ? this.exit() : this.request(elem);\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","\nvar content = require(\"!!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/postcss-loader/src/index.js??ref--5-3!../node_modules/sass-loader/lib/loader.js??ref--5-4!./basic-video-player.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/postcss-loader/src/index.js??ref--5-3!../node_modules/sass-loader/lib/loader.js??ref--5-4!./basic-video-player.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/postcss-loader/src/index.js??ref--5-3!../node_modules/sass-loader/lib/loader.js??ref--5-4!./basic-video-player.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","export default class BasicVideo {\r\n    /**\r\n     * Construct a Basic Video Instance\r\n     *\r\n     * @param {HTMLElement|HTMLVideoElement|HTMLAudioElement} element\r\n     * @param {string} poster\r\n     * @param {array} sources\r\n     * @param {string|number} defaultSource\r\n     * @param {string} hlsManifestUrl\r\n     */\r\n    constructor(element, {\r\n        poster,\r\n        sources,\r\n        defaultSource = 0,\r\n        hlsManifestUrl,\r\n    }){\r\n        this.MediaElement = element;\r\n        this.MediaElement.controls = true;\r\n        this.MediaElement.playsinline = true;\r\n        this.sources = sources;\r\n        this.poster = poster;\r\n        this.isPlaying = false;\r\n        this.loading = true;\r\n        this.defaultSource = defaultSource;\r\n        this.HLSManifestURL = hlsManifestUrl;\r\n        this.HLSisSupported = null;\r\n        this.HLSInstance = null;\r\n\r\n        this.MediaElement.addEventListener('play', () => { this.isPlaying = true; });\r\n        this.MediaElement.addEventListener('pause', () => { this.isPlaying = false; });\r\n\r\n        this.init()\r\n            .then(() => {\r\n                this.loading = false;\r\n                this.MediaElement.dispatchEvent(new CustomEvent('init'));\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    get currentSource(){\r\n        return this.MediaElement.src;\r\n    }\r\n\r\n    /**\r\n     * @param {string} source - File to serve to the media element\r\n     */\r\n    set currentSource(source){\r\n        this.MediaElement.src = source || '';\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    get poster(){\r\n        return this.MediaElement.poster;\r\n    }\r\n\r\n    /**\r\n     * @param {string} poster - File to serve to the media element\r\n     */\r\n    set poster(poster){\r\n       this.MediaElement.poster = poster;\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    get currentVolume() {\r\n        return this.MediaElement.volume;\r\n    }\r\n\r\n    /**\r\n     * @param {number} volume - Number between 0 and 1\r\n     */\r\n    set currentVolume(volume) {\r\n        this.MediaElement.volume = volume || 0.5;\r\n    }\r\n\r\n    get buffered(){\r\n        return this.MediaElement.buffered;\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    get isMuted(){\r\n        return this.MediaElement.muted;\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} muted\r\n     */\r\n    set isMuted(muted){\r\n        this.MediaElement.muted = muted || false;\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    get isLoading(){\r\n        return this.loading;\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    get isReady(){\r\n        return this.MediaElement.readyState === 4;\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    get readyState(){\r\n        return this.MediaElement.readyState;\r\n    }\r\n    /**\r\n     * @returns {number} - Total duration of the media in seconds\r\n     */\r\n    get totalDuration(){\r\n        return this.MediaElement.duration;\r\n    }\r\n\r\n    /**\r\n     * @returns {number} - Current time in seconds\r\n     */\r\n    get currentTime(){\r\n        return this.MediaElement.currentTime;\r\n    }\r\n\r\n    /**\r\n     * @param {number} time - time to seek to in seconds\r\n     */\r\n    set currentTime(time){\r\n        this.MediaElement.currentTime = time || 0;\r\n    }\r\n\r\n    /**\r\n     * @returns {number} - Current time in percentage\r\n     */\r\n    get currentProgress(){\r\n        return this.MediaElement.duration ? this.currentTime / this.MediaElement.duration : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    get playbackRate(){\r\n        return this.MediaElement.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * @param {number} rate - Number to determine the speed of playback. 1 = 100%.\r\n     */\r\n    set playbackRate(rate){\r\n        this.MediaElement.playbackRate = rate || 1;\r\n    }\r\n\r\n    /**\r\n     * @returns {array}\r\n     */\r\n    get playbackQualities(){\r\n        if(this.HLSInstance != null){\r\n            return this.HLSInstance.levels.map((level, index) => {\r\n                return {\r\n                    label: level.name,\r\n                    src: index\r\n                }\r\n            });\r\n        }\r\n\r\n        return this.sources.map((source, index) => {\r\n            return {\r\n                label: source.label,\r\n                src: index\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    get currentPlaybackQuality(){\r\n        if(this.HLSInstance != null){\r\n            return this.HLSInstance.currentLevel;\r\n        }\r\n        else {\r\n            const sourceStrings = this.sources.map(source => source.src);\r\n            return sourceStrings.indexOf(this.currentSource);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {number} quality - Index in the sources/qualities array to load.\r\n     */\r\n    set currentPlaybackQuality(quality){\r\n        if(this.HLSInstance != null){\r\n            this.HLSInstance.currentLevel = quality;\r\n        }\r\n        else {\r\n            const currentTime = this.currentTime;\r\n            const currentPlaybackRate = this.playbackRate;\r\n\r\n            this.currentSource = this.sources[quality].src;\r\n\r\n            this.playbackRate = currentPlaybackRate;\r\n            this.currentTime = currentTime;\r\n\r\n            if(this.isPlaying){\r\n                this.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Force reload the contents of the player (may reset the currentTime back to 0)\r\n     *\r\n     * @returns {Promise} - resolved when the player reaches it's isReady state - rejected after 5 minutes\r\n     */\r\n    forceLoad(){\r\n        return new Promise((resolve, reject) => {\r\n            let ticks = 0;\r\n            this.MediaElement.load();\r\n\r\n            const interval = setInterval(() => {\r\n                ticks++;\r\n\r\n                if(this.isReady){\r\n                    resolve(this.isReady);\r\n                    clearInterval(interval);\r\n                }\r\n\r\n                if(ticks > 3000){\r\n                    reject('Timed Out');\r\n                    clearInterval(interval);\r\n                }\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize the Player\r\n     *\r\n     * @static\r\n     * @returns {Promise}\r\n     */\r\n    init(){\r\n        return new Promise(resolve => {\r\n            if(this.HLSManifestURL){\r\n                BasicVideo.loadHlsJs()\r\n                    .then(loaded => {\r\n                        if (loaded) {\r\n                            this.HLSisSupported = window.Hls.isSupported();\r\n\r\n                            if(this.HLSisSupported){\r\n                                this.attachHls(this.HLSManifestURL).then(initialized => {\r\n                                    this.forceLoad().then(() => {\r\n                                        resolve(true);\r\n                                    });\r\n                                });\r\n                            }\r\n                            else {\r\n                                resolve(false);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n            else {\r\n                this.currentSource = this.sources[this.defaultSource] ? this.sources[this.defaultSource].src : '';\r\n                this.forceLoad().then(() => {\r\n                    resolve(true);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Play\r\n     */\r\n    play(){\r\n        this.MediaElement.play().catch(() => {\r\n            console.log(this.readyState);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Pause\r\n     */\r\n    pause(){\r\n        this.MediaElement.pause();\r\n    }\r\n\r\n    /**\r\n     * Load the hls.js library and append it to the dom\r\n     *\r\n     * I do this because the library is over 200KB minified, seems like overkill to include if the\r\n     * user only wants to load simple mp4s etc..\r\n     *\r\n     * @static\r\n     * @returns {Promise}\r\n     */\r\n    static loadHlsJs(){\r\n        return new Promise(resolve => {\r\n            if(!document.getElementById('hlsJS')){\r\n                const script = document.createElement('script');\r\n\r\n                script.setAttribute('id', 'hlsJS');\r\n                script.setAttribute('src', 'https://cdn.jsdelivr.net/npm/hls.js@latest');\r\n\r\n                document.body.appendChild(script);\r\n\r\n                script.addEventListener('load', () => {\r\n\r\n                    resolve(true);\r\n                });\r\n            } else {\r\n                document.getElementById('hlsJS').addEventListener('load', () => {\r\n                    resolve(true);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Attach an hls.js instance to the video player\r\n     *\r\n     * @param manifest\r\n     * @returns {Promise}\r\n     */\r\n    attachHls(manifest){\r\n        this.HLSInstance = new Hls();\r\n\r\n        return new Promise(resolve => {\r\n            this.HLSInstance.attachMedia(this.MediaElement);\r\n\r\n            // Attach Error Events to the Video Element\r\n            this.HLSInstance.on(Hls.Events.ERROR, (event, data) => {\r\n                this.MediaElement.dispatchEvent(new CustomEvent('HLSError', data));\r\n            });\r\n\r\n            // Load the Source\r\n            this.HLSInstance.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n                this.HLSInstance.loadSource(manifest);\r\n\r\n                this.HLSInstance.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\r\n                    resolve({event, data});\r\n                });\r\n            });\r\n        });\r\n    }\r\n}","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => typeof o === 'function' && directives.has(o);\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !== undefined;\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    let node = start;\n    while (node !== end) {\n        const n = node.nextSibling;\n        container.insertBefore(node, before);\n        node = n;\n    }\n};\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes = (container, startNode, endNode = null) => {\n    let node = startNode;\n    while (node !== endNode) {\n        const n = node.nextSibling;\n        container.removeChild(node);\n        node = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        const _prepareTemplate = (template) => {\n            const content = template.content;\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            // Keeps track of the last index associated with a part. We try to delete\n            // unnecessary nodes, but we never want to associate two different parts\n            // to the same index. They must have a constant node between.\n            let lastPartIndex = 0;\n            while (walker.nextNode()) {\n                index++;\n                const node = walker.currentNode;\n                if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                    if (node.hasAttributes()) {\n                        const attributes = node.attributes;\n                        // Per\n                        // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                        // attributes are not guaranteed to be returned in document order.\n                        // In particular, Edge/IE can return them out of order, so we cannot\n                        // assume a correspondance between part index and attribute index.\n                        let count = 0;\n                        for (let i = 0; i < attributes.length; i++) {\n                            if (attributes[i].value.indexOf(marker) >= 0) {\n                                count++;\n                            }\n                        }\n                        while (count-- > 0) {\n                            // Get the template literal section leading up to the first\n                            // expression in this attribute\n                            const stringForPart = result.strings[partIndex];\n                            // Find the attribute name\n                            const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                            // Find the corresponding attribute\n                            // All bound attributes have had a suffix added in\n                            // TemplateResult#getHTML to opt out of special attribute\n                            // handling. To look up the attribute value we also need to add\n                            // the suffix.\n                            const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                            const attributeValue = node.getAttribute(attributeLookupName);\n                            const strings = attributeValue.split(markerRegex);\n                            this.parts.push({ type: 'attribute', index, name, strings });\n                            node.removeAttribute(attributeLookupName);\n                            partIndex += strings.length - 1;\n                        }\n                    }\n                    if (node.tagName === 'TEMPLATE') {\n                        _prepareTemplate(node);\n                    }\n                }\n                else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                    const data = node.data;\n                    if (data.indexOf(marker) >= 0) {\n                        const parent = node.parentNode;\n                        const strings = data.split(markerRegex);\n                        const lastIndex = strings.length - 1;\n                        // Generate a new text node for each literal section\n                        // These nodes are also used as the markers for node parts\n                        for (let i = 0; i < lastIndex; i++) {\n                            parent.insertBefore((strings[i] === '') ? createMarker() :\n                                document.createTextNode(strings[i]), node);\n                            this.parts.push({ type: 'node', index: ++index });\n                        }\n                        // If there's no text, we must insert a comment to mark our place.\n                        // Else, we can trust it will stick around after cloning.\n                        if (strings[lastIndex] === '') {\n                            parent.insertBefore(createMarker(), node);\n                            nodesToRemove.push(node);\n                        }\n                        else {\n                            node.data = strings[lastIndex];\n                        }\n                        // We have a part for each match found\n                        partIndex += lastIndex;\n                    }\n                }\n                else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                    if (node.data === marker) {\n                        const parent = node.parentNode;\n                        // Add a new marker node to be the startNode of the Part if any of\n                        // the following are true:\n                        //  * We don't have a previousSibling\n                        //  * The previousSibling is already the start of a previous part\n                        if (node.previousSibling === null || index === lastPartIndex) {\n                            index++;\n                            parent.insertBefore(createMarker(), node);\n                        }\n                        lastPartIndex = index;\n                        this.parts.push({ type: 'node', index });\n                        // If we don't have a nextSibling, keep this node so we have an end.\n                        // Else, we can remove it to save future costs.\n                        if (node.nextSibling === null) {\n                            node.data = '';\n                        }\n                        else {\n                            nodesToRemove.push(node);\n                            index--;\n                        }\n                        partIndex++;\n                    }\n                    else {\n                        let i = -1;\n                        while ((i = node.data.indexOf(marker, i + 1)) !==\n                            -1) {\n                            // Comment node has a binding marker inside, make an inactive part\n                            // The binding won't work, but subsequent bindings will\n                            // TODO (justinfagnani): consider whether it's even worth it to\n                            // make bindings in comments work\n                            this.parts.push({ type: 'node', index: -1 });\n                        }\n                    }\n                }\n            }\n        };\n        _prepareTemplate(element);\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this._parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this._parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // When using the Custom Elements polyfill, clone the node, rather than\n        // importing it, to keep the fragment in the template's document. This\n        // leaves the fragment inert so custom elements won't upgrade and\n        // potentially modify their contents by creating a polyfilled ShadowRoot\n        // while we traverse the tree.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const parts = this.template.parts;\n        let partIndex = 0;\n        let nodeIndex = 0;\n        const _prepareInstance = (fragment) => {\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n            let node = walker.nextNode();\n            // Loop through all the nodes and parts of a template\n            while (partIndex < parts.length && node !== null) {\n                const part = parts[partIndex];\n                // Consecutive Parts may have the same node index, in the case of\n                // multiple bound attributes on an element. So each iteration we either\n                // increment the nodeIndex, if we aren't on a node with a part, or the\n                // partIndex if we are. By not incrementing the nodeIndex when we find a\n                // part, we allow for the next part to be associated with the current\n                // node if neccessasry.\n                if (!isTemplatePartActive(part)) {\n                    this._parts.push(undefined);\n                    partIndex++;\n                }\n                else if (nodeIndex === part.index) {\n                    if (part.type === 'node') {\n                        const part = this.processor.handleTextExpression(this.options);\n                        part.insertAfterNode(node.previousSibling);\n                        this._parts.push(part);\n                    }\n                    else {\n                        this._parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n                    }\n                    partIndex++;\n                }\n                else {\n                    nodeIndex++;\n                    if (node.nodeName === 'TEMPLATE') {\n                        _prepareInstance(node.content);\n                    }\n                    node = walker.nextNode();\n                }\n            }\n        };\n        _prepareInstance(fragment);\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const endIndex = this.strings.length - 1;\n        let html = '';\n        for (let i = 0; i < endIndex; i++) {\n            const s = this.strings[i];\n            // This exec() call does two things:\n            // 1) Appends a suffix to the bound attribute name to opt out of special\n            // attribute value parsing that IE11 and Edge do, like for style and\n            // many SVG attributes. The Template class also appends the same suffix\n            // when looking up attributes to create Parts.\n            // 2) Adds an unquoted-attribute-safe marker for the first expression in\n            // an attribute. Subsequent attribute expressions will use node markers,\n            // and this is safe since attributes with multiple expressions are\n            // guaranteed to be quoted.\n            const match = lastAttributeNameRegex.exec(s);\n            if (match) {\n                // We're starting a new bound attribute.\n                // Add the safe attribute suffix, and use unquoted-attribute-safe\n                // marker.\n                html += s.substr(0, match.index) + match[1] + match[2] +\n                    boundAttributeSuffix + match[3] + marker;\n            }\n            else {\n                // We're either in a bound node, or trailing bound attribute.\n                // Either way, nodeMarker is safe to use.\n                html += s + nodeMarker;\n            }\n        }\n        return html + this.strings[endIndex];\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => (value === null ||\n    !(typeof value === 'object' || typeof value === 'function'));\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (v != null &&\n                    (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n                else {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\nexport class AttributePart {\n    constructor(comitter) {\n        this.value = undefined;\n        this.committer = comitter;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Inserts this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n     * its next sibling must be static, unchanging nodes such as those that appear\n     * in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part._insert(this.startNode = createMarker());\n        part._insert(this.endNode = createMarker());\n    }\n    /**\n     * Appends this part after `ref`\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref._insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        const value = this._pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this._commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this._commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this._commitNode(value);\n        }\n        else if (Array.isArray(value) || value[Symbol.iterator]) {\n            this._commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this._commitText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this._insert(value);\n        this.value = value;\n    }\n    _commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = value;\n        }\n        else {\n            this._commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n        }\n        this.value = value;\n    }\n    _commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value && this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this._commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    _commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const value = !!this._pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n        }\n        this.value = value;\n        this._pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this._pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this._boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this._pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this._pendingValue)) {\n            const directive = this._pendingValue;\n            this._pendingValue = noChange;\n            directive(this);\n        }\n        if (this._pendingValue === noChange) {\n            return;\n        }\n        const newListener = this._pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        if (shouldAddListener) {\n            this._options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this._boundHandleEvent, this._options);\n        }\n        this.value = newListener;\n        this._pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const comitter = new PropertyCommitter(element, name.slice(1), strings);\n            return comitter.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const comitter = new AttributeCommitter(element, name, strings);\n        return comitter.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","export default {\r\n\r\n    getTimeRailMouseEventOffsetPercentage(event, element){\r\n        const mouseX = event.clientX || (event.touches[0] ? event.touches[0].clientX : event.changedTouches[0].clientX);\r\n\r\n        function getPosition(el) {\r\n            const positions = {\r\n                x: 0,\r\n                y: 0\r\n            };\r\n\r\n\r\n            while (el) {\r\n                if (el.tagName === \"BODY\") {\r\n                    // deal with browser quirks with body/window/document and page scroll\r\n                    let xScroll = el.scrollLeft || document.documentElement.scrollLeft;\r\n                    let yScroll = el.scrollTop || document.documentElement.scrollTop;\r\n\r\n                    positions['x'] += (el.offsetLeft - xScroll + el.clientLeft);\r\n                    positions['y'] += (el.offsetTop - yScroll + el.clientTop);\r\n                } else {\r\n                    // for all other non-BODY elements\r\n                    positions['x'] += (el.offsetLeft - el.scrollLeft + el.clientLeft);\r\n                    positions['y'] += (el.offsetTop - el.scrollTop + el.clientTop);\r\n                }\r\n\r\n                el = el.offsetParent;\r\n            }\r\n            return positions;\r\n        }\r\n\r\n        return ((mouseX - getPosition(element).x) /  element.clientWidth * 100);\r\n    },\r\n\r\n    parseTime(time){\r\n        const _time = Number(time);\r\n        const sections = {\r\n            hours: Math.floor(_time / 3600),\r\n            minutes: Math.floor(_time % 3600 / 60),\r\n            seconds: Math.floor(_time % 3600 % 60)\r\n        };\r\n        let parsedTime = '';\r\n\r\n        function padZeroes(num){\r\n            return num > -1 && num < 10 ? ('0' + num) : num;\r\n        }\r\n\r\n        Object.keys(sections).forEach(section => {\r\n            if(sections[section] > 0 || section !== 'hours'){\r\n                if(section !== 'seconds'){\r\n                    parsedTime += sections[section] + ':';\r\n                }\r\n                else {\r\n                    parsedTime += padZeroes(sections[section]);\r\n                }\r\n            }\r\n        });\r\n\r\n        return parsedTime;\r\n    }\r\n}","import {html} from 'lit-html';\r\n\r\nexport default function Spacer(){\r\n    return html`\r\n        <div class=\"bv__flex-grow\"></div>\r\n    `;\r\n}","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update (associated\n        // with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from old parts\n        // or created for new keys in this update). This is saved in the above\n        // cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a parallel\n        // array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these are\n        // generated lazily only when needed as a performance optimization,\n        // since they are only required for multiple non-contiguous changes in\n        // the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach based on\n        // ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and arrays of\n        //   their respective keys), head/tail pointers into each, and we build\n        //   up the new list of parts by updating (and when needed, moving) old\n        //   parts or creating new ones. The initial scenario might look like\n        //   this (for brevity of the diagrams, the numbers in the array reflect\n        //   keys associated with the old parts or new values, although keys and\n        //   parts/values are actually stored in parallel arrays indexed using\n        //   the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new item\n        //   order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating, swapping, or\n        //   removing parts at the head/tail locations until neither head nor\n        //   tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old part 0\n        // in-\n        //   place (no need to move it) and record part 0 in the `newParts`\n        //   list. The last thing we do is advance the `oldHead` and `newHead`\n        //   pointers (will be reflected in the next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0 and\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail pointers do, so\n        //   update part 6 in place (no need to move it), and record part 6 in\n        //   the `newParts` list. Last, advance the `oldTail` and `oldHead`\n        //   pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6 and\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldTail & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the old\n        // head/tail\n        //   items was removed. We first need to generate the reverse map of new\n        //   keys to index (`newKeyToIndexMap`), which is done once lazily as a\n        //   performance optimization, since we only hit this case if multiple\n        //   non-contiguous changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance from either\n        //   end and pass each other before we get to this case and removals\n        //   would be handled in the final while loop without needing to\n        //   generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer in the\n        //   `newKeyToIndexMap`), so remove that part from the DOM and advance\n        //   just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map; remove 5 and\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to either\n        // new or\n        //   moved items; if a new key is in the previous \"old key to old index\"\n        //   map, move the old part to the new location, otherwise create and\n        //   insert a new part. Note that when moving an old part we null its\n        //   position in the oldParts array if it lies between the head and tail\n        //   so we know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither were\n        // removed;\n        //   so find the `newHead` key in the `oldKeyToIndexMap`, and move that\n        //   old part's DOM into the next head position (before\n        //   `oldParts[oldHead]`). Last, null the part in the `oldPart` array\n        //   since it was somewhere in the remaining oldParts still to be\n        //   scanned (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck; update & move 2 into\n        //   place newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part inserted\n        // at\n        //   the head pointer is inserted before the current\n        //   `oldParts[oldHead]`, and a part inserted at the tail pointer is\n        //   inserted before `newParts[newTail+1]`. The seeming asymmetry lies\n        //   in the fact that new parts are moved into place outside in, so to\n        //   the right of the head pointer are old parts, and to the right of\n        //   the tail pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm, allowing\n        // matching\n        //   and simple updates in place to continue...\n        //\n        // * Example below: the head pointers once again match, so simply update\n        //   part 1 and record it in the `newParts` array.  Last, advance both\n        //   head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched; update 1 and\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of being\n        // stuck\n        //   (the final else clause in the code below) are marked with null, so\n        //   we always advance old pointers over these so we're comparing the\n        //   next actual old value on either end.\n        //\n        // * Example below: `oldHead` is null (already placed in newParts), so\n        //   advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] // old head already used; advance\n        //   newParts: [0, 2, 1,  ,  ,  , 6] // oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they are\n        // moved\n        //   from head to tail or tail to head, since they will be outside the\n        //   pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head key, so\n        //   the part at the `oldTail` position and move its DOM to the new\n        //   head position (before `oldParts[oldHead]`). Last, advance `oldTail`\n        //   and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new head:\n        //   update newKeys:  [0, 2, 1, 4, 3, 7, 6]   & move 4, advance oldTail\n        //   & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the old head\n        //   part in place, and advance the `oldHead` and `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3 and\n        //   advance newKeys:  [0, 2, 1, 4, 3, 7, 6]    oldHead & newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all we have\n        //   left is additions (if old list exhausted) or removals (if new list\n        //   exhausted). Those are handled in the final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done with the\n        //   main loop.  Create the remaining part and insert it at the new head\n        //   position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not important to the\n        //   algorithm, as long as the null checks come first (to ensure we're\n        //   always working on valid old parts) and that the final else clause\n        //   comes last (since that's where the expensive moves occur). The\n        //   order of remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest increasing\n        //   subsequence (LIS) of old items in new position, and only move those\n        //   not in the LIS set. However that costs O(nlogn) time and adds a bit\n        //   more code, and only helps make rare types of mutations require\n        //   fewer moves. The above handles removes, adds, reversal, swaps, and\n        //   single moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS might\n        //   help approaches a random shuffle, the LIS optimization becomes less\n        //   helpful, so it seems not worth the code at this point. Could\n        //   reconsider if a compelling case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals & moves\n                    // below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or moves; see\n                    // if we have an old part we can reuse and move into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] = updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that it will\n                        // be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new tail,\n            // since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","import BasicVideo from 'basic-video/src/basic-video.js';\r\nimport Screenfull from 'screenfull';\r\nimport {html, render} from 'lit-html';\r\nimport Utils from './utils';\r\nimport Rewind from './components/Rewind';\r\nimport Spacer from './components/Spacer';\r\nimport Forward from './components/Forward';\r\nimport Progress from './components/Progress';\r\nimport PlayPause from './components/PlayPause';\r\nimport Timestamps from './components/Timestamps';\r\nimport Volume from './components/Volume';\r\nimport Settings from './components/Settings';\r\nimport Fullscreen from './components/Fullscreen';\r\n\r\nexport default class BasicVideoPlayer {\r\n    /**\r\n     * Construct a Basic Video Player\r\n     *\r\n     * @param {HTMLElement|Element} element\r\n     * @param {string} id - the id of the video element\r\n     * @param {object} options - The options object to be passed to the BasicVideo instance\r\n     */\r\n    constructor(element, id = 'BasicVideoPlayer', options){\r\n        this.bvContainer = element;\r\n        this.bvContainer.classList.add('bv__loading'); // Start the loading state\r\n        this.videoElementId = id;\r\n        this.bvControls = null;\r\n        this.currentMouseX = 0;\r\n        this.seeking = false;\r\n        this.settings = false;\r\n\r\n        this.renderBasicVideo(options);\r\n\r\n        this.trackMousePosition();\r\n\r\n        this.documentClickEvents();\r\n\r\n        // Remove loading state\r\n        this.basicVideo.MediaElement.addEventListener('init', () => {\r\n            this.bvContainer.classList.remove('bv__loading');\r\n        });\r\n\r\n        // Listen for all player events and trigger a rerender of any relevant component\r\n        [\r\n            'play',\r\n            'pause',\r\n            'timeupdate',\r\n            'init',\r\n            'volumechange',\r\n            'settings',\r\n            'seeking',\r\n        ].forEach(eventName => {\r\n            this.basicVideo.MediaElement.addEventListener(eventName, () => {\r\n                render(this.Controls(this.basicVideo), this.bvControls);\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Render the video player\r\n     *\r\n     * @param {string} options - The options object to be passed to the BasicVideo instance\r\n     */\r\n    renderBasicVideo(options){\r\n        const videoElement = () => html`\r\n            <video id=\"${this.videoElementId}\" preload=\"auto\"></video>\r\n            <div class=\"bv__loading__animation\">\r\n                <div class=\"loader bv__text\">\r\n                    <div class=\"square-1\"></div>\r\n                    <div class=\"square-2\"></div>\r\n                    <div class=\"square-3\"></div>\r\n                    <div class=\"square-4\"></div>\r\n                    loading..\r\n                </div>\r\n            </div>\r\n            <div class=\"bv__controls bv__flex-column\">\r\n                ${ this.Controls(this.basicVideo) }\r\n            </div>\r\n        `;\r\n\r\n        render(videoElement(), this.bvContainer);\r\n\r\n        this.basicVideo = new BasicVideo(document.getElementById(this.videoElementId), options);\r\n        this.bvControls = this.bvContainer.querySelector('.bv__controls');\r\n        this.basicVideo.MediaElement.controls = false;\r\n    }\r\n\r\n    /**\r\n     * Controls Component\r\n     *\r\n     * @param BasicVideo - The BasicVideo instance\r\n     */\r\n    Controls(BasicVideo){\r\n        return html`\r\n            <div class=\"bv__flex-row\">\r\n                ${ Rewind(BasicVideo) }\r\n                ${ Spacer() }\r\n                ${ Forward(BasicVideo) }\r\n            </div>\r\n            \r\n            <div class=\"bv__flex-row\">\r\n                ${ Progress(BasicVideo, this) }\r\n            </div>\r\n            \r\n            <div class=\"bv__flex-row\">\r\n                ${ PlayPause(BasicVideo) }\r\n                ${ Timestamps(BasicVideo) }\r\n                ${ Spacer() }\r\n                ${ Volume(BasicVideo) }\r\n                ${ Settings(BasicVideo, this) }\r\n                ${ Screenfull.enabled ? Fullscreen(this.bvContainer) : null }\r\n            </div>\r\n        `;\r\n    };\r\n\r\n    /**\r\n     * Track the mouse position when a user hovers over the player\r\n     * useful for different functions\r\n     */\r\n    trackMousePosition(){\r\n        this.bvContainer.addEventListener('mousemove', event => {\r\n            this.currentMouseX = Utils.getTimeRailMouseEventOffsetPercentage(\r\n                event,\r\n                this.bvContainer\r\n            );\r\n\r\n            if(this.seeking){\r\n                this.basicVideo.MediaElement.dispatchEvent(new CustomEvent('seeking'));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Track any document click events\r\n     */\r\n    documentClickEvents(){\r\n        document.addEventListener('click', event => {\r\n            const element = event.target;\r\n\r\n            if(!element.matches('.bv__settings') && !element.matches('.bv__settings__drawer')){\r\n                this.settings = false;\r\n                this.basicVideo.MediaElement.dispatchEvent(new CustomEvent('settings'));\r\n            }\r\n        });\r\n    }\r\n}","import {html} from 'lit-html';\r\n\r\nexport default function Rewind(BasicVideo = {}){\r\n    const rewind = {\r\n        handleEvent(event){\r\n            BasicVideo.currentTime = BasicVideo.currentTime - 10;\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    return html`\r\n        <div class=\"bv__flex-column bv__flex-auto bv__pad\">\r\n            <button \r\n                class=\"bv__button\" \r\n                title=\"Rewind 10 Seconds\" \r\n                @click=\"${rewind}\">\r\n                <i class=\"fas fa-redo fa-flip-horizontal\"></i>\r\n            </button>\r\n        </div>\r\n    `;\r\n}","import {html} from 'lit-html';\r\n\r\nexport default function Forward(BasicVideo = {}){\r\n    const fastForward = {\r\n        handleEvent(event){\r\n            BasicVideo.currentTime = BasicVideo.currentTime + 10;\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    return html`\r\n        <div class=\"bv__flex-column bv__flex-auto bv__pad\">\r\n            <button \r\n                class=\"bv__button\" \r\n                title=\"Fast Forward 10 Seconds\" @click=\"${fastForward}\">\r\n                <i class=\"fas fa-redo\"></i>\r\n            </button>\r\n        </div>\r\n    `;\r\n}","import {html} from 'lit-html';\r\nimport Utils from '../utils';\r\n\r\nexport default function Progress(BasicVideo = {}, BasicVideoPlayer = {}){\r\n    const progressBarWidth = BasicVideoPlayer.seeking ?\r\n        BasicVideoPlayer.currentMouseX / 100 :\r\n        BasicVideo.currentProgress;\r\n    const hoverTime = Utils.parseTime(BasicVideo.totalDuration * (BasicVideoPlayer.currentMouseX / 100));\r\n    let translatePositionInPixels = BasicVideoPlayer.bvContainer.clientWidth * (BasicVideoPlayer.currentMouseX / 100);\r\n\r\n    if(translatePositionInPixels < 30){\r\n        translatePositionInPixels = 30;\r\n    } else if(translatePositionInPixels > (BasicVideoPlayer.bvContainer.clientWidth - 50)){\r\n        translatePositionInPixels = (BasicVideoPlayer.bvContainer.clientWidth - 50);\r\n    }\r\n\r\n    const mouseUp = {\r\n        handleEvent(event){\r\n            const offset = Utils.getTimeRailMouseEventOffsetPercentage(\r\n                event,\r\n                BasicVideoPlayer.bvContainer\r\n            ) / 100;\r\n\r\n            BasicVideoPlayer.seeking = false;\r\n            BasicVideo.currentTime = BasicVideo.totalDuration * offset;\r\n            BasicVideo.play();\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    const mouseDown = {\r\n        handleEvent(event){\r\n            BasicVideoPlayer.seeking = true;\r\n            BasicVideo.pause();\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    const mouseMove = {\r\n        handleEvent(event){\r\n            BasicVideo.MediaElement.dispatchEvent(new CustomEvent('seeking'));\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    const preventDefault = {\r\n        handleEvent(event){\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return html`\r\n        <div class=\"bv__flex-column bv__progress__column bv__flex-grow ${BasicVideoPlayer.seeking ? 'active' : ''}\"\r\n             @dragstart=\"${preventDefault}\"\r\n             @dragend=\"${preventDefault}\"\r\n             @mouseup=\"${mouseUp}\" \r\n             @mousedown=\"${mouseDown}\" \r\n             @mousemove=\"${mouseMove}\">\r\n            <div class=\"bv__progress__bar\" >\r\n                <span class=\"bv__current__progress\" \r\n                      style=\"transform:scaleX(${progressBarWidth});\"></span>\r\n                    \r\n                <span class=\"bv__current__buffered\"></span>\r\n                \r\n                <progress class=\"bv__progress\" \r\n                          value=\"${(BasicVideo.currentProgress * 100) || 0}\" \r\n                          max=\"100\"></progress>\r\n            </div>\r\n            \r\n            <div class=\"bv__text bv__hover__time bv__flex-center\" \r\n                 style=\"transform:translateX(${translatePositionInPixels}px);\">\r\n                ${hoverTime}\r\n            </div>\r\n        </div>\r\n    `;\r\n}","import {html} from 'lit-html';\r\n\r\nexport default function PlayPause(BasicVideo = {}){\r\n    let isPlaying = BasicVideo.isPlaying || false;\r\n    const playPause = {\r\n        handleEvent(event){\r\n            if(BasicVideo){\r\n                BasicVideo.isPlaying ? BasicVideo.pause() : BasicVideo.play();\r\n                isPlaying = BasicVideo.isPlaying;\r\n            }\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    return html`\r\n        <div class=\"bv__flex-column bv__flex-auto bv__pad\">\r\n            <button class=\"bv__button bv__play__pause ${isPlaying ? 'bv__playing' : ''}\" \r\n                    title=\"Play\" \r\n                    @click=\"${playPause}\">\r\n                    \r\n                <i class=\"fas fa-play\"></i>\r\n                \r\n                <i class=\"fas fa-pause\"></i>\r\n            </button>\r\n        </div>\r\n    `;\r\n}","import {html} from 'lit-html';\r\nimport Utils from '../utils';\r\n\r\nexport default function Timestamps(BV){\r\n    const BasicVideo = BV ? BV : {};\r\n    const currentTime = Utils.parseTime(BasicVideo.currentTime ? BasicVideo.currentTime : 0);\r\n    const totalDuration = Utils.parseTime(BasicVideo.totalDuration ? BasicVideo.totalDuration : 0);\r\n\r\n    return html`\r\n        <div class=\"bv__flex-column bv__flex-auto bv__flex-center bv__pad\">\r\n            <div class=\"bv__flex-row\">\r\n                <span id=\"bv__currentTime\" class=\"bv__text bv__pad\">${currentTime}</span>\r\n                <span class=\"bv__text bv__pad\">/</span>\r\n                <span id=\"bv__duration\" class=\"bv__text bv__pad\">${totalDuration}</span>\r\n            </div>\r\n        </div>\r\n    `;\r\n}","import {html} from 'lit-html';\r\n\r\nexport default function Volume(BasicVideo = {}){\r\n    const changeVolume = {\r\n        handleEvent(event){\r\n            BasicVideo.isMuted = false;\r\n            let value = event.target.value;\r\n\r\n            if(value <= 1){\r\n                BasicVideo.isMuted = true;\r\n            }\r\n\r\n            BasicVideo.currentVolume = value / 100;\r\n        },\r\n        capture: true\r\n    };\r\n    const muteVolume = {\r\n        handleEvent(event){\r\n            BasicVideo.isMuted = !BasicVideo.isMuted;\r\n        },\r\n        capture: true\r\n    };\r\n    const rangeHandle = 'width:' + (BasicVideo.isMuted ? 0 : (BasicVideo.currentVolume * 100)) + '%;';\r\n    const volumeButtonClass = BasicVideo.isMuted ? 'muted' : (BasicVideo.currentVolume < 0.3 ? 'low' : '');\r\n\r\n    return html`\r\n        <div class=\"bv__volume bv__flex-column bv__flex-auto\">\r\n            <div class=\"bv__flex-row\">\r\n                <div class=\"bv__flex-column bv__pad bv__flex-center\">\r\n                    <div class=\"bv__range\">\r\n                        <div class=\"bv__range__container\">\r\n                            <div class=\"bv__range__rail\">\r\n                                <span class=\"bv__range__handle\" style=\"${rangeHandle}\"></span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <input \r\n                            class=\"bv__volume__range\" \r\n                            type=\"range\" \r\n                            min=\"1\" \r\n                            max=\"100\" \r\n                            value=\"${BasicVideo.currentVolume}\" \r\n                            @input=\"${changeVolume}\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"bv__column bv__pad\">\r\n                    <button \r\n                        class=\"bv__button bv__volume__button ${volumeButtonClass}\" \r\n                        @click=\"${muteVolume}\">\r\n                        <i class=\"fas fa-volume-up\"></i>\r\n                        <i class=\"fas fa-volume-down\"></i>\r\n                        <i class=\"fas fa-volume-mute\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `;\r\n}","import {html} from 'lit-html';\r\nimport { repeat } from 'lit-html/directives/repeat';\r\n\r\nexport default function Progress(BasicVideo = {}, BVP){\r\n    const playbackQualities = BasicVideo.playbackQualities || [];\r\n    const currentPlaybackQuality = BasicVideo.currentPlaybackQuality;\r\n    let settingsDrawer = BVP.settings;\r\n    let settingsDrawerClassList = !settingsDrawer ? 'bv__hidden fadeOutRight' : 'fadeInRight';\r\n\r\n    const openSettings = {\r\n        handleEvent(event){\r\n            BVP.settings = !BVP.settings;\r\n            BasicVideo.MediaElement.dispatchEvent(new CustomEvent('settings'));\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    const stopPropagation = {\r\n        handleEvent(event){\r\n            event.stopPropagation();\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    const setPlaybackRate = {\r\n        handleEvent(event){\r\n            BasicVideo.playbackRate = event.target.value;\r\n        },\r\n        capture:true\r\n    };\r\n\r\n    const qualitiesOptions = () => html`\r\n        ${repeat(playbackQualities, (i) => i.label, (i, index) => html`\r\n            ${i.src === currentPlaybackQuality\r\n                ? html`<option value=\"${i.src}\" selected>${i.label}</option>`\r\n                : html `<option value=\"${i.src}\">${i.label}</option>`\r\n            }\r\n        `)}\r\n    `;\r\n\r\n    const setPlaybackQuality = {\r\n        handleEvent(event){\r\n            BasicVideo.currentPlaybackQuality = event.target.value;\r\n        },\r\n        capture:true\r\n    };\r\n\r\n    return html`\r\n        <div class=\"bv__flex-column bv__flex-auto bv__pad bv__relative\">\r\n            <button class=\"bv__settings bv__button\" @click=\"${openSettings}\">\r\n                <i class=\"fas fa-cog\"></i>\r\n            </button>\r\n\r\n            <aside \r\n                class=\"bv__settings__drawer bv__aside bv__flex-column bv__pad bv__animated ${settingsDrawerClassList}\" \r\n                @click=\"${stopPropagation}\">\r\n                \r\n                <div class=\"bv__rate__group bv__input__group bv__flex-row bv__flex-center\">\r\n                    <div class=\"bv__flex-column bv__flex-grow\">\r\n                        <label class=\"bv__text\">Playback Rate:</label>\r\n                    </div>\r\n                    <div class=\"bv__flex-column bv__select__column\">\r\n                        <select class=\"bv__rate bv__select\" @change=\"${setPlaybackRate}\">\r\n                            <option value=\"0.5\">0.5</option>\r\n                            <option value=\"0.75\">0.75</option>\r\n                            <option value=\"1\" selected>1</option>\r\n                            <option value=\"1.25\">1.25</option>\r\n                            <option value=\"1.5\">1.5</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"bv__sources__group bv__input__group bv__flex-row bv__flex-center\">\r\n                    <div class=\"bv__flex-column bv__flex-grow\">\r\n                        <label class=\"bv__text\">Quality:</label>\r\n                    </div>\r\n                    <div class=\"bv__flex-column bv__select__column\" \r\n                         @change=\"${setPlaybackQuality}\">\r\n                        <select class=\"bv__sources bv__select\">\r\n                           ${qualitiesOptions()}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        </div>\r\n    `;\r\n}","import {html} from 'lit-html';\r\nimport Screenfull from \"screenfull\";\r\n\r\nexport default function Progress(element){\r\n    const fullscreen = {\r\n        handleEvent(event){\r\n            if(Screenfull.enabled){\r\n                Screenfull.toggle(element);\r\n            }\r\n        },\r\n        capture: true\r\n    };\r\n\r\n    return html`\r\n        <div class=\"bv__flex-column bv__flex-auto bv__pad\">\r\n            <button id=\"bv__fullscreen\" class=\"bv__button\" @click=\"${fullscreen}\">\r\n                <i class=\"fas fa-expand\"></i>\r\n            </button>\r\n        </div>\r\n    `;\r\n}","import BasicVideoPlayer from './basic-video-player';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const videoContainer = document.getElementById('player');\r\n    const basicVideoPlayer = new BasicVideoPlayer(videoContainer,\r\n        'player_1', {\r\n        poster: 'https://d292x7cpdimrbp.cloudfront.net/video/poster.jpg',\r\n        sources: [\r\n            {\r\n                src: 'https://d292x7cpdimrbp.cloudfront.net/video/1080.mp4',\r\n                type: 'video/mp4',\r\n                label: '1080'\r\n            },\r\n            {\r\n                src: 'https://d292x7cpdimrbp.cloudfront.net/video/720.mp4',\r\n                type: 'video/mp4',\r\n                label: '720'\r\n            },\r\n            {\r\n                src: 'https://d292x7cpdimrbp.cloudfront.net/video/480.mp4',\r\n                type: 'video/mp4',\r\n                label: '480'\r\n            },\r\n        ],\r\n        hlsManifestUrl: 'https://d292x7cpdimrbp.cloudfront.net/video/video.m3u8'\r\n    });\r\n\r\n    const videoContainer2 = document.getElementById('player2');\r\n    const basicVideoPlayer2 = new BasicVideoPlayer(videoContainer2, 'player_2', {\r\n        poster: 'https://d292x7cpdimrbp.cloudfront.net/video/poster.jpg',\r\n        sources: [\r\n            {\r\n                src: 'https://d292x7cpdimrbp.cloudfront.net/video/1080.mp4',\r\n                type: 'video/mp4',\r\n                label: '1080'\r\n            },\r\n            {\r\n                src: 'https://d292x7cpdimrbp.cloudfront.net/video/720.mp4',\r\n                type: 'video/mp4',\r\n                label: '720'\r\n            },\r\n            {\r\n                src: 'https://d292x7cpdimrbp.cloudfront.net/video/480.mp4',\r\n                type: 'video/mp4',\r\n                label: '480'\r\n            },\r\n        ],\r\n        hlsManifestUrl: 'https://d292x7cpdimrbp.cloudfront.net/video/video.m3u8'\r\n    });\r\n});\r\n"],"sourceRoot":""}